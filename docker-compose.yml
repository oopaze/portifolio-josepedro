version: "3.8"
   
services:
  frontend:
    container_name: frontend4${COMPOSE_PROJECT_NAME}
    build: ./frontend
    volumes:
      - './:/app'
      - '/app/node_modules'
    ports:
      - 3001:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - API_URL=http://localhost:8090
    command: npm start
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: "backend4${COMPOSE_PROJECT_NAME}"
    command: gunicorn src.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8090:8000"
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: "db4${COMPOSE_PROJECT_NAME}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment: 
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWD}
    ports:
      - "5435:5432"

volumes:
  postgres_data:
    